name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # âœ… Ensure full repo is cloned

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install pipx
        run: python -m pip install --user pipx && python -m pipx ensurepath

      - name: Install Poetry
        run: pipx install poetry  # âœ… Install Poetry globally

      - name: Add Poetry to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH  # âœ… Ensure Poetry is in PATH

      - name: Check Poetry Version
        run: poetry --version  # âœ… Verify installation

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        run: poetry run pytest -v

  deploy:
    runs-on: ubuntu-latest
    needs: test  # âœ… Ensures "test" passes before deploying

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy Application
        run: echo "íº€ Deploying the application..."

